// Generated by CoffeeScript 1.6.2
var MainPage, Menu, MenuParts, TitleLogo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

MainPage = (function(_super) {
  __extends(MainPage, _super);

  function MainPage() {
    this.parts = {};
    this.parts.titleLogo = new TitleLogo(this);
    this.parts.menu = new Menu(this);
  }

  MainPage.prototype.update = function() {
    var y;

    y = this.parts.titleLogo.update();
    this.parts.menu.update(y);
  };

  MainPage.prototype.draw = function(ctx) {
    this.parts.titleLogo.draw(ctx);
    this.parts.menu.draw(ctx);
  };

  MainPage.prototype.touchStartEvent = function(e) {
    this.parts.titleLogo.touchEvent(e);
  };

  MainPage.prototype.touchMoveEvent = function(e) {
    this.parts.menu.touchMoveEvent(e);
  };

  return MainPage;

})(Page);

Menu = (function(_super) {
  __extends(Menu, _super);

  function Menu() {
    this.parts = {};
    this.parts.info = new MenuParts('Info', 120, 120);
    this.parts.work = new MenuParts('Works', 120, 240);
    this.parts.aboutMe = new MenuParts('About Me', 120, 360);
    this.parts.contact = new MenuParts('Contact', 120, 480);
  }

  Menu.prototype.update = function(y) {
    var menuParts, _results;

    _results = [];
    for (menuParts in this.parts) {
      _results.push(this.parts[menuParts].update(y));
    }
    return _results;
  };

  Menu.prototype.draw = function(ctx) {
    var menuParts, _results;

    _results = [];
    for (menuParts in this.parts) {
      _results.push(this.parts[menuParts].draw(ctx));
    }
    return _results;
  };

  Menu.prototype.touchMoveEvent = function(e) {
    var menuParts, _results;

    _results = [];
    for (menuParts in this.parts) {
      _results.push(this.parts[menuParts].touchMoveEvent(e));
    }
    return _results;
  };

  return Menu;

})(Parts);

MenuParts = (function(_super) {
  __extends(MenuParts, _super);

  function MenuParts(text, x, y) {
    this.text = text;
    this.x = x;
    this.y = y;
    this.size = 48;
    this.visible = false;
  }

  MenuParts.prototype.update = function(y) {
    if (this.y + 64 < y && this.visible === false) {
      this.visible = true;
      this.cursor = true;
      this.cursor = 0;
    }
    if (!(this.y + 64 < y) && this.visible === true) {
      this.visible = false;
    }
    if (this.visible && this.cursor < this.text.length) {
      return ++this.cursor;
    }
  };

  MenuParts.prototype.draw = function(ctx) {
    var text;

    if (this.visible) {
      text = this.text.substr(0, this.cursor);
      ctx.lineWidth = 2;
      ctx.font = this.size + "px 'Crimson Text', serif";
      if (this.active) {
        ctx.fillStyle = 'rgb(176,255,176)';
      } else {
        ctx.fillStyle = 'rgb(0,160,233)';
      }
      ctx.fillText(text, this.x, this.y);
      if (this.active) {
        ctx.strokeStyle = 'rgb(112,205,14)';
      } else {
        ctx.strokeStyle = 'rgb(1,64,153)';
      }
      return ctx.strokeText(text, this.x, this.y);
    }
  };

  MenuParts.prototype.touchMoveEvent = function(e) {
    var _ref, _ref1;

    if ((this.x <= (_ref = e.x) && _ref < this.x + ctx.measureText(this.text).width) && (this.y - this.size <= (_ref1 = e.y) && _ref1 < this.y + this.size / 4)) {
      return this.active = true;
    } else {
      return this.active = false;
    }
  };

  return MenuParts;

})(Parts);

TitleLogo = (function(_super) {
  __extends(TitleLogo, _super);

  function TitleLogo() {
    this.text = 'W125. Works';
    this.sY = 88;
    this.eY = 640;
    this.x = 32;
    this.size = 64;
    this.y = this.sY;
    this.dy = 0;
    this.ay = 0;
    this.cursor = 0;
  }

  TitleLogo.prototype.update = function() {
    this.dy += this.ay;
    this.y += this.dy;
    if (this.y > this.eY) {
      this.y = this.eY;
      this.dy = 0;
      this.ay = 0;
    }
    if (this.y <= this.sY) {
      this.y = this.sY;
      this.dy = 0;
      this.ay = 0;
    }
    if (this.cursor < this.text.length) {
      ++this.cursor;
    }
    return this.y;
  };

  TitleLogo.prototype.draw = function(ctx) {
    var text;

    text = this.text.substr(0, this.cursor);
    ctx.lineWidth = 2;
    ctx.font = this.size + "px 'Crimson Text', serif";
    ctx.fillStyle = 'rgb(0,160,233)';
    ctx.fillText(text, this.x, this.y);
    ctx.strokeStyle = 'rgb(1,64,153)';
    return ctx.strokeText(text, this.x, this.y);
  };

  TitleLogo.prototype.touchEvent = function(e) {
    var _ref, _ref1;

    ctx.font = this.size + "px 'Crimson Text', serif";
    if (this.y === this.eY && (this.x <= (_ref = e.x) && _ref < this.x + ctx.measureText(this.text).width) && (this.y - this.size <= (_ref1 = e.y) && _ref1 < this.y + this.size / 4)) {
      this.dy = -48;
      this.ay = 2;
    }
    if (this.y !== this.eY) {
      return this.ay = 2;
    }
  };

  return TitleLogo;

})(Parts);
